<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[JAVA中的数据存储]]></title>
    <url>%2F2017%2F08%2F26%2FJAVA%E4%B8%AD%E7%9A%84%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8%2F</url>
    <content type="text"><![CDATA[你好，欢迎来到我的个人技术博客。 JAVA中的数据存储JVM中内存区域划分：（我们主要关心栈、堆、常量池） 1.寄存器：（最快）编译器分配，不由程序控制线程私有的（一个线程有一个这样的内存区域）：程序计数器和栈帧（stack）。2.程序计数器：指示线程执行到第几行，即行号指示器，不存在内存溢出。3.虚拟机栈：当执行Java方法时创建，存储局部变量表、操作站、动态链接、方法出口。4.本地方法栈：（一般用不到）当执行本地方法时创建。线程共享区：堆区（heap），方法区。5.堆区：（空间最大）虚拟机启动时创建，存储对象实例、成员变量。（可能存在对象在栈上分配空间）6.方法区：存储已经被JVM加载的类信息（包括版本、field、方法、接口）、final常量、静态变量、编译期即是编译的代码。方法区包含一个运行时常量池，用于存储编译期就生成的字面常量、符号引用、翻译出来的直接引用（符号引用就是编码是用字符串表示某个变量、接口的位置，直接引用就是根据符号引用翻译出来的地址，将在类链接阶段完成翻译）；运行时常量池除了存储编译期常量外，也可以存储在运行时间产生的常量（比如String类的intern()方法，作用是String维护了一个常量池，如果调用的字符“abc”已经在常量池中，则返回池中的字符串地址，否则，新建一个常量加入池中，并返回地址）。7.非ROM存储：硬盘等永久存储空间 举例以Object obj = new Object();为例区分：JVM栈、堆、方法区Object obj：表示一个本地引用，存储在栈中，表示一个reference（引用）类型数据new Object()：作为实例对象数据存储在堆中堆中还记录了Object类的类型信息的地址，地址指向的数据存储在方法区中 补充：1.Java方法与本地方法JAVA方法是由JAVA编写的，编译成字节码，存储在class文件中本地方法是由其它语言编写的，编译成和处理器相关的机器代码2.对于String类，String s = “字符串”;是存放在常量池中，对于equals相同的字符串在常量池中只有一份String s = new String(“zyy”);是存放在堆中，当用这种方法创建字符串”zyy”时，会先查找常量池中是否有”zyy”如果没有，就先在常量池中创建一个此对象，然后再堆中创建一个”zyy”对象的拷贝对象。String s = new String(“xyz”);产生几个对象？（面试题）3.基础类型的变量存放在栈、常量存放在常量池4.字符串拼接编译期是用StringBuilder的append()方法 参考图片： 参考博文String相关：http://blog.csdn.net/renyuanchunby/article/details/6980358Java代码分析：http://www.iteye.com/topic/634530]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java高级</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JavaEE之Jsp学习]]></title>
    <url>%2F2017%2F08%2F22%2FJavaEE%E4%B9%8BJsp%E5%AD%A6%E4%B9%A0%2F</url>
    <content type="text"><![CDATA[你好，欢迎来到我的个人技术博客。 JavaEE之Jsp学习Java Server Pages（JSP）是使用&lt;%%&gt;标签嵌入了Java代码的动态Html页面，可以用于从数据库中检索信息或登记的用户偏好，访问JavaBeans组件，传递页面之间的控制和请求，网页等之间共享信息。&lt;% java相关代码 %&gt;：脚本（scriptlet）可以包含任意数量的Java语句，变量、方法声明，有效表达式&lt;%out.println(“Your IP address is”+request.getRemoteAddr());%&gt; JSP入门1.JSP声明（一个或多个变量、方法）（属于全局的）Jsp文件使用变量、方法必须先声明。 &lt;%! int i = 0; %&gt; &lt;%! int a,b,c; %&gt; &lt;%! Circle ci = new Circle(2.0); %&gt;//这个需要新建类，导入java包 jsp里导入java包问题：http://www.cnblogs.com/rongyao/p/6295950.html 2.JSP表达式（计算、转换字符串）注意不要使用分号结尾。&lt;\p&gt;今天是：&lt;%= (new Date()).toLocaleString() %&gt;&lt;\/p&gt; 3.JSP注释&lt;%–JSP注释将不显示，被JSP引擎忽略 –%&gt;&lt;、!– html注释，被浏览器忽略 –&gt; 4.JSP指令（后面详细介绍）影响servlet的整体结构指令 |作用—————–|————————–&lt;%@page %&gt; |定义页面依赖属性，例如脚本语言，错误页面和缓冲的要求&lt;%@include %&gt; |包括在转换阶段的文件&lt;%@taglib %&gt; |声明了一个标签库，包含自定义动作，用在页面中 5.JSP动作（后面详细介绍）使用XML语法结构来控制Servlet引擎的行为。可以动态地插入文件，重用JavaBeans组件，用户转发到另一个页面，或为Java插件生成HTML。&lt;\jsp:action_name attribute=”value” /&gt;—————–|—————————jsp:include |包括页面被一次请求的文件jsp:useBean |查找或实例化一个JavaBeanjsp:setProperty |设置一个JavaBean的属性jsp:getProperty |插入一个JavaBean的属性到输出jsp:forward |转发请求到一个新的页面jsp:plugin |生成特定浏览器的代码，使对象或嵌入标签Java插件jsp:element |定义XML元素动态jsp:attribute |定义动态定义XML元素的属性jsp:body |定义动态定义的XML元素主体jsp:text |用于编写模板文本在JSP页面和文档 6.JSP隐式对象（JSP自动定义的变量）————-|———————————out |用于将输出发送给客户端的PrintWriter对象request |与请求相关联的HttpServletRequest对象response |用于响应客户端相关联的HttpServletResponse对象session |与请求相关联的HttpSession对象application |应用程序上下文关联的ServletContext对象config |与页面关联的ServletConfig对象pageContext |封装采用类似更高的性能JspWriters服务器特定的功能page |一个简单的代名词，是用来调用由转换servlet类中定义的方法Exception |Exception对象允许例外的数据由JSP指定访问 7.JSP对象范围scope属性JSP对象所使用的可用性通常是由该对象的范围限定。——————|——————————Page 范围: |使用此JSP对象可以在其中创建的页面内使用。Request 范围: |使用该JSP对象可以在请求服务任何地方使用。Session 范围: |使用该JSP的对象可用于在属于同一个会话页面。Application 范围: |使用该JSP的对象可以在整个应用程序页面中使用。 8.控制语句（条件语句、循环语句）if…else、switch…casefor、while、do…while 9.运算符（类似Java）后缀运算符：()、[]、. 10.在JSP页面中创建方法先定义方法，使用方法 &lt;%! public int add(int a,int b){ return a+b; } %&gt; 两个数相加和：&lt;%=add(1, 2) %&gt; 11.在JSP页面中使用数组 &lt;% String[] arr = {&quot;red&quot;,&quot;green&quot;,&quot;pink&quot;}; %&gt; &lt;% int j; out.println(&quot;&lt;p&gt;输出字符串数组中的元素：&lt;/p&gt;&quot;); for(j=0;j&lt;arr.length;j++){ out.print(arr[j]+&quot;,&quot;); } %&gt; 12.在JSP页面中使用Java Bean嵌入一个Java bean到JSP网页，有三个基本动作或标签： 这个标签是用来给bean指定“id”和“scope”属性相关联。 这个标签被用于设置一个beans属性的值，主要使用“name”属性已经定义了相同的范围对象。其他属性是 “property”, “param”, “value” 这个标签是用来获取引用Bean实例属性并将其存储到隐式out对象。Beans的规则：包应该是java bean的第一行Bean应该有一个空的构造所有的bean中的变量应该设置有“get”，“set”方法。属性名应以大写字母开头在使用“set”，“get”方法时。例如变量“名称”的get，set方法就是getName(), setName(String)设置方法应该返回像一个空(void)值： “return void()”在JSP页面中使用JavaBean：http://www.cnblogs.com/sherryueda/p/4270400.html 13.JSP Session（会话）会话处理变得必不可少，当一个请求数据需要被持续保持以供进一步使用。 由于HTTP协议认为每个请求是一个新的请求，它不能保持过去访问的数据，因此会话处理就变得很重要。 String name = request.getParameter(&quot;name&quot;); if((name!=null)) { session.setAttribute(&quot;username&quot;,name); } &lt;%= session.getAttribute(&quot;username&quot;) %&gt; 14.JSP Cookies信息处理Cookies和会话有一些相似的地方，唯一的区别是cookies 存储在浏览器，而会话存储在服务器端。创建Cookie： Cookie cookie = new Cookie (&quot;name&quot;,name); response.addCookie(cookie); cookie.setMaxAge(50 * 50); 使用读取Cookie： Cookie[] cookies = request.getCookies(); for (int i=0; i&lt;cookies.length; i++){ if(cookies[i].getName().equals(&quot;name&quot;)) out.println(cookies[i].getValue()); } 删除Cookie： Cookie cookie = new Cookie( &quot;name&quot;, &quot;&quot; ); cookie.setMaxAge( 0 ); http://blog.csdn.net/springsen/article/details/7833582 JSP指令page指令：通常位于jsp页面的顶端，同一个页面可以有多个page指令 &lt;%@ page 属性=“属性值” %&gt; 三种主要属性1.language属性（默认”java”）2.import属性（引入类文件”java.util.*”）3.contentType属性（”text/html;charset=utf-8”）include指令：将一个外部文件嵌入到jsp中，同时解析其中jsp语句taglib指令：使用标签库定义新的自定义标签 JSP动作JSP内置对象（隐式对象）1.out对象，JspWriter类的实例，用于向客户端输出内容。常用方法：———————–|—————————–println() |打印字符串clean() |清除缓冲区内容，如果在flash之后调用会抛出异常cleanBuffer() |清除缓冲区内容，如果在flash之后调用不会抛出异常flush() |将缓冲区内容输出到客户端(int)getBufferSize() |缓冲区大小（byte）(int)getRemaining() |缓冲区剩余空间大小（byte）(boolean)isAutoFlush() |缓冲区满时，是否自动清空close() |关闭输出流2.request对象客户端的请求信息被封装在request对象中，是HttpServletRequest类的实例，常用方法：——————————————|———————-setCharacterEncoding(“utf-8”) |设置提交表单中文显示setAttribute(String,Object) |存储请求中的键值对(String)getParameter(String name) |返回name指定参数的对应值(String[])getParameterValues(String name) |获取例如checkbox类型复选框的多个值(Object)getAttribute(String name) |返回属性值(String)getRealPath(“request.jsp”) |返回文件物理地址(String)getContextPath() |返回上下文项目地址 3.response对象很少直接使用。(String)getCharacterEncoding()(PrintWriter)getWriter()返回一个可以向客户端输出字符的对象，输出提前于内置的out对象（可使用out.flush();语句解决）setRedirect(“reg.jsp”)请求重定向方法 4.Session对象（表示客户端与服务器之间的一次会话）是一个时间概念。1.Web中Session指用户浏览网页时，从打开到浏览器关闭这段时间。2.服务器会为每个用户在服务器中保存一个session，使用session可以保存用户对象，实现在多个也页面切换过程中仍然知道是一个用户，即通过超链接打开的新页面是同一个会话。session是HttpSession类的实例。3.session的生命周期，创建客户端打开jsp或Servlet时，服务器为用户创建一个会话，使用SessionId唯一标识并用于校验。活动通过超链接跳转，重新打开浏览器新窗口访问同一项目资源。销毁调用了session。invalidate()方法，Session超时，服务器重启。常用方法：———————————-|————-(String)getCreationTime(): |返回session创建时间(String)getId():session创建时系统生成的唯一id(Object)setAttribute(name,value): |使用name将对象绑定到此会话getAttribute():返回绑定的对象(String[])getValueNames(name): |session中属性数组(int)getMaxInactiveInterval(): |两次请求相隔多久此session被释放（秒）即session超时时间 5.application对象存储共享数据 6.page对象page对象是指向当前jsp页面，（类似this）是java.lang.Object类的实例，方法类似于Object类方法，如有toString()方法 7.pageContext对象与Config对象1.pageContext对象提供了对JSP页面中所有对象及名字空间的访问，例如可以访问session，访问本页面所在application的某属性值。他的类名也叫pageContext。2.常用方法：(JspWriter)getOut()(HttpSession)getSession()(Object)getPage()(ServletRequest)getRequest()(ServletResponse)getResponse()setAttribute()(Object)getAttribute()forWard()页面跳转 include指令与动作（包含页面） include指令 jsp:include动作 &lt;%@include file=”URL” %&gt; &lt;\jsp:include page=”URL” flush=”false” /&gt; 页面转换时起作用 请求时 包含页面代码实际内容 包含页面的输出结果内容 转换合成一个Servlet.java 仍然是两个独立的Servlet.java 编译时慢，运行块 编译快，运行时慢。 jsp:forward动作（页面跳转）&lt;\jsp:forward page=”URL” /&gt; 相当于服务器内部跳转（request.getRequestDispatcher(“URL”).forward(req,resp)） jsp:param动作（添加修改表单元素）&lt;\jsp:param name=”” value=”” /&gt; JavaBean1.JavaBean的设计原则：共有类，无参构造方法，属性私有，getter和setter方法2.JSP动作元素：主要学习以下三种：&lt;\jsp:userBean&gt;、&lt;\jsp:setProperty&gt;、&lt;\jsp:getProperty&gt;&lt;\jsp:useBean id=”myUsers” class=”com.dao.Users” scope=”page”&gt;&lt;\/jsp:useBean&gt;其中id属性表示Java对象（名字自定义）与下面元素中name属性对应，class属性表示Java类（包括包名），scope属性表示作用范围（application\request\session\page）。&lt;\jsp:setProperty property=”“ name=”myUsers”/&gt;为JavaBean对象属性赋值，有四种形式：与表单关联可以用“”使一一对应，也可以单个赋值，可以加一个value属性手动设置值，可以使用“?username=zhangsan”参数传递加一个param属性。&lt;\jsp:getProperty property=”username” name=”myUsers”/&gt;获取JavaBean对象属性值 Jsp状态管理cookie1.http是无状态的，不记忆用户信息及用户访问浏览信息，为了弥补，引入session和cookie2.Session3.Cookie（小甜饼）是Web服务器保存在客户端的一些文本信息。典型应用：判定用户是否已登录，“购物车”处理。视频网站会记录用户浏览看过的视频。登录时有记住用户名密码选项实现自动登录功能。Jsp页面中使用Cookie： ————-|—————————创建： |Cookie cookie = new Cookie(String key,Object value);写入对象： |response.addCookie(cookie);读取对象： |Cookie[] cookies = request.getCookies();常用方法： |获取cookie名称：getName()\设置和获取cookie的有效期（单位秒）设置和获取cookie的值。 补充：1.form表单提交方式get方式和post方式的区别：get方式（以明文方式通过URL提交数据，数据在URL中可以看到。数据量不能超过2KB，安全不高，效率高，多用于比如：搜索、查询等）post方式（将提交的信息封装在HTML HEADER里，提交比如注册、修改、上传等）2.请求重定向与请求转发：请求重定向（response.sendRedirect(“request.jsp”)）是客户端行为，本质是两次请求，第一次的不会保存，地址栏的URL地址会变。请求转发（request.getRequestDispatcher(“request.jsp”).forward(req,resp)）是服务器行为，转发后保存请求对象，地址栏不变。（假设一个表单提交用户信息action=”a.jsp”，然后在a.jsp中进行页面跳转到b.jsp，信息在b.jsp中显示。请求重定向方式传的数据均为空，请求转发可以传成功。）3.Session与Cookie的对比——————–|——————-信息保存在服务器 |客户端Object类型 |String类型数据会话结束，数据销毁 |可以长期保存在客户端安全，重要 |不重要4.jdbc连接oracle（端口默认8080）、mysql（端口默认3306）等主流数据库的驱动类和url：http://blog.csdn.net/huozengguang/article/details/60956621 public class DBHelper { //数据库驱动 private static final String driver = &quot;com.mysql.jdbc.Driver&quot;; //连接数据库的URL地址 private static final String url = &quot;jdbc:mysql://localhost:3306/shopping?useUnicode=true&amp;characterEncoding=utf-8&quot;; //数据库用户名 private static final String username = &quot;root&quot;; //数据库密码 private static final String password = &quot;root&quot;; private static Connection conn = null; //静态代码块负责加载驱动 static{ try { Class.forName(driver); } catch (Exception e) { e.printStackTrace(); } } //单例模式返回一个数据库连接对象 public static Connection getConnection(){ if(conn==null){ try { conn = DriverManager.getConnection(url,username,password); return conn; } catch (SQLException e) { e.printStackTrace(); } } return conn; } }]]></content>
      <categories>
        <category>JavaEE</category>
      </categories>
      <tags>
        <tag>Jsp</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java类加载机制]]></title>
    <url>%2F2017%2F08%2F17%2FJava%E7%B1%BB%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6%2F</url>
    <content type="text"><![CDATA[你好，欢迎来到我的个人技术博客。 Java类加载机制 http://www.importnew.com/6581.htmlhttp://blog.csdn.net/luanlouis/article/details/50529868http://www.cnblogs.com/ITtangtang/p/3978102.htmlhttp://blog.csdn.net/zhoudaxia/article/details/35824249]]></content>
      <categories>
        <category>深入理解Java虚拟机</category>
      </categories>
      <tags>
        <tag>Java高级</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[9个问题]]></title>
    <url>%2F2017%2F08%2F17%2F9%E4%B8%AA%E9%97%AE%E9%A2%98%2F</url>
    <content type="text"><![CDATA[你好，欢迎来到我的个人技术博客。 问问自己这九个问题？走走停停，让灵魂赶上忙碌的肉体1、请你介绍一下你自己，你是个什么样的人？2、你有什么理想吗？这个理想是怎么形成的？3、你理想的伴侣关系是什么样的？你自己在这个伴侣关系中扮演什么样的角色？要承担什么样的责任？4、你理想的事业是什么，你正在做的工作符合你的事业理想吗？这份工作对你的意义是什么？5、你对亲子关系怎么看？对你来说，什么是一个理想的父亲（母亲），你期望自己成为这样一个理想父亲（母亲）吗？6、你对钱怎么看，你认为赚到多少钱是足够的？如果你明天一早醒来，已经有足够的钱，你将会如何继续安排自己的生活？7、对你来说，什么是理想的性生活？什么是理想的性道德，在你的性道德观中，什么样的性生活是禁忌的，需要避免的，什么样的性生活是美好的，需要得到鼓励和发展的？8、你的择友标准是什么？什么样的人你会愿意交往，什么样的人你会拒绝和他交往？9、你对死亡怎么看？你希望自己活到多少岁，你准备怎么度过从现在到死亡的这段时间？如果你要立遗嘱，这份遗嘱会怎么写？ 我的认真思考，第一想法：虽然一些回答想法还不够成熟。1.自我介绍：我叫张玉鹰，弓长张，玉树临风的玉，宝玉的玉，鹰击长空的鹰，雄鹰的鹰。寓意就包含在那两个词里，正直而有抱负。家住河南省会城市郑州，我是学计算机的，毕业于长春大学。我性格开朗，喜欢交朋友，希望可以跟大家成为生活和工作中的好朋友，还有，我喜欢新事物有探索精神，喜欢旅游，喜欢运动。（鞠躬）谢谢。以我对自己的了解，我是一个性格开朗，有活力，待人热情，真诚，不过缺点也是有的，比如心眼较小，有时缺乏耐心，不太会表达，这些都在努力改正。2.我的理想就是找个好工作，挣大钱，开豪车娶美女。反正就是要更美好地享受生活。3.是爱，欣赏，包容理解，像《致橡树》中说的那样，不依附，独立相伴，侣行一辈子。男人，丈夫，父亲。照顾妻子孩子，赡养父母。4.项目经理（目前Java工程师）。符合，学计算机比较容易创业，能赚大钱。解决自己的生活问题，和别人的某些需求问题。5.作为一个单亲孩子，我同样认为良好的亲子关系对于孩子非常重要，所以，结婚生孩子就是一辈子。理性的父亲首先是有担当的，有责任和义务照顾自己的妻子孩子，其次作为孩子从小的榜样，模板作用的人，应该有良好的习惯，品质精神。当然。6.金钱很重要，因为我现在没钱。有车，有房，有些许积蓄，生活小康，假期可以去旅游。会把钱全部先存起来，自己生活还是跟以前一样，钱急用的时候拿出来。7.性生活，主要目的是生育，其次是享受快感和增进感情。我认为的理想的性道德是婚前，不性骚扰，不婚外恋，对人对己都不好，不拒绝性行为，承认性是爱的极致表现，但避免怀孕，即是避免互相伤害，婚后相亲相爱，不搞婚外情。8.坦诚大方，势均力敌，不高攀，不俯就。9.人都是会死的，只是不知道是那一天，既然这样，就好好活好每一天。80岁。努力，让每一天都有事干，都有意义。不立遗嘱。以下是别人的回答：(回答1)[https://www.douban.com/note/351477854/](回答2)[http://www.jianshu.com/p/dacf64ef091d]]]></content>
      <categories>
        <category>杂记</category>
      </categories>
      <tags>
        <tag>问题思考</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[网站整理]]></title>
    <url>%2F2017%2F08%2F15%2F%E7%BD%91%E7%AB%99%E6%95%B4%E7%90%86%2F</url>
    <content type="text"><![CDATA[你好，欢迎来到我的个人技术博客。 网站海洋中自己的足迹 主要是学习的网站，学习中主要是IT计算机。不过也有其他的：交流网站，视频网站等，不断的收集整理。总有一个最美丽的贝壳属于你。 学习网站前端技术类1.W3school（主要是Web技术）2.DIVCSS53.前端网 文档教程类1.ORACLE Java文档（Oracle官网Java教程）2.易百教程3.菜鸟教程4.ImportNew（专注Java&amp;Android）5.在线工具 视频课程类1.慕课网（程序员的梦工厂）2.牛客网（题库是亮点）3.极客学院4.腾讯课堂（不只是学习IT）5.网易云课堂6.codecademy（）7.中国大学MOOC（大学课程）8.网易公开课（学习各种知识）9.百度传课（学知识）10.好知（重拾学习乐趣）11.淘宝教育 技术论坛文章类1.知乎2.果壳问答（外国的知乎）3.V2EX（一个关于分享和探索的地方）4.微博（新鲜事）5.今日头条6.掘金（一个帮助开发者成长的社区）7.码农网8.并发编程网（天下没有难学的技术）9.开源中国（找到你想想要的开源项目）10.博客园11.图灵社区（阅读）12.异步社区（书）13.Fenby（IT图书阅读）14.我要自学网15.NEXT（不错过任何一个新产品）16.GitHub（代码托管）17.码云（中国的GitHub）18.萌码19.CSDN20.51CTO21.CodeCloud（问题解决方案）22.程序源代码（好多源码下载）23.程序员之家24.最代码（分享问答）25.Ruby China 我也不知道这些都是干嘛的！1.codewars2.LeetCode3.StackOverflow（翻墙访问问答）4.SegmentFault（面向开发者的技术问答）5.石墨文档6.CODING 美丽的博客1.华行天下2.结构之法 算法之道（） 生活qq、微信、Twitter1.豆瓣FM（音乐）2.哔哩哔哩（漫视频）3.落花网（电影电视你懂的）4.网易新闻 学习网站导航1纳米（学习网站导航） 补充的都在这儿iShadow（免费的ss）MSDN，我告诉你云代码（分享源代码片段）**]]></content>
      <categories>
        <category>杂记</category>
      </categories>
      <tags>
        <tag>网站整理</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java基础]]></title>
    <url>%2F2017%2F08%2F11%2FJava%E5%9F%BA%E7%A1%80%2F</url>
    <content type="text"><![CDATA[你好，欢迎来到我的个人技术博客。 Java基础Java语言1995年由Sun公司发布，2009年被Oracle公司收购。（2014年JDK8） 开发环境相关1.Java核心概念：jvm、jdk、jre我们下载的jdk（包含jre（jre包含Java虚拟机））2.安装JDK，配置环境变量： 1.JAVA_HOME：（jdk安装路径,即整个文件夹的本地路径） 2.path:（jdk命令文件的位置，即bin目录） 3.CLASSPATH：（类库文件位置，即lib目录）3.java程序是如何一步步变化执行的：源文件（.java）–&gt;经过Java编译器（使用javac命令）–&gt;字节码文件（.class）–&gt;经过解释器（使用java命令）–&gt;平台执行 封装继承多态1.this：当前对象2.初始化顺序：先初始化父类对象，然后是子类对象先属性初始化再构造方法3.Object类：toString()返回对象的哈希码（对象的身份证号）equals()比较对象的引用是否指向同一块内存区域（比较引用）等价于“==”4.引用多态（父类引用指向子类对象），方法多态（子类可以调用重写方法和继承方法） （自己新定义的方法不能用）5.向下类型转换（强制，大类型转小类型，有风险）使用instanceof运算符避免运行时错误。（对象引用 instanceof 类）返回布尔值6.abstract抽象类：限制子类必须实现某些方法，不关注实现细节。7.接口： 1.由常量，抽象方法组成。（接口可以说是一个规范，用来约束类的。interface） 2.接口可以继承多个父接口。 3.常量自动包含public static final，方法自动包含public abstract。 4.类可以实现implements多接口。（命名，前面加I，如:IPlayGame） 5.可以使用匿名内部类实现接口。 异常1.Throwable–&gt;(Error)+Exception–&gt;运行时异常+检查异常2.运行时异常（RuntimeException）主要包括:空指针异常(NullPointerException)、数组下标越界异常(ArrayIndexOutOfBoundsException)、类型转换异常(ClassCastException)、算数异常(ArithmeticException)3.检查异常主要包括：文件异常(IOException)、SQL异常(SQLException) 集合：即盛装其他元素的容器。Collection–&gt;List(序列)+Set(集)–&gt;ArrayList(数组序列)+LinkedList(链表)+HashSetMap–&gt;HashMap List ArrayList（父接口：Collection，Iterable）本身是个接口，不能实例化。特点：有序，可重复性，常用方法：1.添加元素：(boolean)add(E e)（(void)add(int index,E e)、addAll(Collection c)、addAll(int i,Collection c)）2.获取元素：(E)get(int index)3.迭代器方法：(Iterator)iterator() （方法：(boolean)hasNext()、(E)next()）4.修改元素：(E)set(int index, E e)5.删除元素：(E)remove(int i)（(boolean)remove(Object o)、removeAll()） 泛型集合中存放的元素，可以是任意数据类型的对象（对象的引用）。 如果把某个对象放入集合，就会忽略它的类型，当Object处理。而在取出元素的时候进行数据类型转换。当插入错误类型对象数据时，编译正常，运行取出时就会报错。 泛型是规定某一集合中只能存放特定类型的对象。 会在编译期进行类型检查获取集合元素时按照指定类型获取，就不用数据强转了。 Set HashSet特点：无序，不包含重复元素，最多一个空元素。set添加元素，无论重复添加多少次，都只会保留一个该对象（对象的引用）方法跟list相似，没有set()修改元素的方法 Map HashMap特点：存放键映射值的对象引用，键不可以重复，值可以重复。无序添加或修改元素：(V)put(K key,V value) 添加时应判断key不存在，修改是判断key存在删除元素：(V)remove(Object key)(V)get(Object key):返回指定键所映射的值或null。（可用于判断要添加元素键是否已存在） 特殊方法：可以方便遍历Map中的元素得到Map中key值的集合:(Set)keySet()得到Map中Value值的集合:(Collection)values()得到Map中键值对的集合:(Set]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Java基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[JavaEE之Servlet学习]]></title>
    <url>%2F2017%2F08%2F09%2FJavaEE%E4%B9%8BServlet%E5%AD%A6%E4%B9%A0%2F</url>
    <content type="text"><![CDATA[你好，欢迎来到我的个人技术博客。 Java web之servlet学习Servlet是jsp的前身，他是运行在服务器上的Java小程序。 servlet基础：手工编写Servlet类：1.Servlet类继承HttpServlet（实现了http协议）2.重写doGet()或者doGet()方法注：&lt;\a&gt;标签超链接是doGet()方式请求，form表单可以doPost()可以doGet()3.在web.xml中注册该Servlet类 &lt;\servlet&gt; &lt;\servlet-name&gt;HelloServlet&lt;\/servlet-name&gt; &lt;\servlet-class&gt;servlet.HelloServlet&lt;\/servlet-class&gt; &lt;\/servlet&gt; &lt;\servlet-mapping&gt; &lt;\servlet-name&gt;HelloServlet&lt;\/servlet-name&gt; &lt;\url-pattern&gt;/servlet/HelloServlet&lt;\/url-pattern&gt; &lt;\/servlet-mapping&gt; 集成工具编写Servlet：1.src-&gt;new-&gt;Servlet2.重写doGet()或者doGet()方法3.部署运行 注意点：1.生命周期：init()初始化、调用service()方法执行doGet()或者doPost()方法、调用destroy()销毁。2.Tomcat装载Servlet的三种情况： Servlet容器（Tomcat服务器包含多个Servlet容器）启动时，可以在&lt;\/Servlet&gt;中添加代码：&lt;\load-on-startup&gt;2&lt;\/load-on-startup&gt;（设置加载优先级，数字小优先级高。） Servlet容器启动后，客户端首次向服务器发送请求时。 * Servlet类文件修改更新时，重新加载Servlet容器。3.整个生命周期，init()方法只调用一次。 获取初始化参数1.在\&lt;\/Servlet&gt;中添加代码： &lt;\init-param&gt; &lt;\param-name&gt;username&lt;\/param-name&gt; &lt;\param-value&gt;admin&lt;\/param-value&gt; &lt;\/init-param&gt; &lt;\init-param&gt; &lt;\param-name&gt;password&lt;\/param-name&gt; &lt;\param-value&gt;admin&lt;\/param-value&gt; &lt;\/init-param&gt;设置初始化参数&lt;名、值&gt;2.Servlet类调用父类方法getInitParameter(“username”)获取初始化参数。 Servlet与jsp九大内置对象 JSP对象 Servlet如何获取 out response.getWriter requset service方法中的requset response service方法中的response session requset.getSession()函数 application getServletContext()函数 exception Throwable page this pageContext PageContext Config getServletConfig()函数 Servlet表单提交回显1.实例化Javabean对象，使用getParameter()获取表单数据，getParameterValues()获取复选框数据，将数据封装到Javabean对象中。2.保存Javabean对象到session中。例： request.getSession().setAttribute(“regUser”, u); 3.页面跳转。例： request.getRequestDispatcher(“userinfo.jsp”).forward(request, response);//response.sendRedirect(“userinfo.jsp”); 4.jsp页面回显数据： &lt;\jsp:useBean id=”regUser” class=”bean.User” scope=”session”&gt;&lt;\/jsp:useBean&gt;正常获取显示 &lt;\jsp:getProperty property=”username” name=”regUser”/&gt;Java遍历输出显示 &lt;% String[] favorites = regUser.getFavorites(); if(favorites!=null){ for(String f:favorites){ %&gt; &lt;%=f %&gt;&amp;nbsp;&amp;nbsp; &lt;%} }else{%>]]></content>
      <categories>
        <category>JavaEE</category>
      </categories>
      <tags>
        <tag>Servlet</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用IDEA和Maven创建Java web项目]]></title>
    <url>%2F2017%2F08%2F02%2F%E4%BD%BF%E7%94%A8IDEA%E5%92%8CMaven%E5%88%9B%E5%BB%BAJava%20web%E9%A1%B9%E7%9B%AE%2F</url>
    <content type="text"><![CDATA[你好，欢迎来到我的个人技术博客。 使用IDEA和Maven创建Java web项目 认识 Maven Maven是一个软件项目管理工具，基于项目对象模型（POM），maven下管理、创建项目非常简单。最强大的功能就是能够自动下载项目依赖库。 Maven 配置 首先到Maven官网下载,解压；解压后如图由于Maven远程仓库在国外，所以在下载相关jar包时非常慢，解决需要两步： 1.将其配置为Alibaba的仓库，添加下面代码；找到/conf/setting.xml文件，用文本编辑器打开，添加如下信息： &lt;mirror&gt; &lt;id&gt;alimaven&lt;/id&gt; &lt;name&gt;aliyun maven&lt;/name&gt; &lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public/&lt;/url&gt; &lt;mirrorOf&gt;central&lt;/mirrorOf&gt; &lt;/mirror&gt; &lt;mirror&gt; &lt;id&gt;uk&lt;/id&gt; &lt;mirrorOf&gt;central&lt;/mirrorOf&gt; &lt;name&gt;Human Readable Name for this Mirror.&lt;/name&gt; &lt;url&gt;http://uk.maven.org/maven2/&lt;/url&gt; &lt;/mirror&gt; &lt;mirror&gt; &lt;id&gt;CN&lt;/id&gt; &lt;name&gt;OSChina Central&lt;/name&gt; &lt;url&gt;http://maven.oschina.net/content/groups/public/&lt;/url&gt; &lt;mirrorOf&gt;central&lt;/mirrorOf&gt; &lt;/mirror&gt; &lt;mirror&gt; &lt;id&gt;nexus&lt;/id&gt; &lt;name&gt;internal nexus repository&lt;/name&gt; &lt;!-- &lt;url&gt;http://192.168.1.100:8081/nexus/content/groups/public/&lt;/url&gt;--&gt; &lt;url&gt;http://repo.maven.apache.org/maven2&lt;/url&gt; &lt;mirrorOf&gt;central&lt;/mirrorOf&gt; &lt;/mirror&gt; &lt;/mirrors&gt; 2.配置IDEA加上-DarchetypeCatalog=internal 运行参数，archetype-catalog.xml本地获取操作如图： 新建项目注意：要选maven-archetype-webapp（如图）nextGroupID 是项目组织唯一的标识符，实际对应JAVA的包的结构，是main目录里java的目录结构。ArtifactID 是项目的唯一的标识符，实际对应项目的名称，就是项目根目录的名称。 nextMaven home directory:即上一步Maven解压目录User settings file：即上一步修改的那个xml文件Local repository：在解压目录同级新建包repository，仓库目录。next修改项目名称。finish配置成功提示信息（如图）成功了，开心撒花！！！完成之后项目的文件目录如图。]]></content>
      <categories>
        <category>IntelliJ IDEA</category>
      </categories>
      <tags>
        <tag>Maven</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[正则表达式]]></title>
    <url>%2F2017%2F08%2F02%2F%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%2F</url>
    <content type="text"><![CDATA[你好，欢迎来到我的个人技术博客。 正则表达式 1，正则表达式的用途：正则表达式是用来判断“字 符串”是否符合某个“样式”时，这个“样式”的表达方式。 2，正则表达式的写法：1）可以使用“//”括住正则表达式的样式，当在程序中使用正则表达式时，这是最快速容易的方式。2）可以用类方法建立对象“Regxep.new(str)”这种写法。原来已经有了一个代表样式的字符串时，用这种方式建立正则表达式会比较方 便。3）“%r”，当正则表达式内部用到“/”字符时，改用“%r”会比较方便。 3，正则表达式的匹配：符号“=~”，写法：正则表达式 =~ 字符串；不成立时会返回null，成立时会返回字符串中与样式匹配成功的起始位置。 4，正则表达式的样式：1）英文字母与数字：只会单纯地去匹配字符串里是否包含相同的文字。 2）转义字符： “^”表示“与行首匹配成功的样式”；“$”表示“与行尾匹配成功的样式”；“\A”表示“与字符串头匹配成功的样式”；“\z”表示“与字符 串尾匹配成功的样式”。 “[]”表示“与其中任意一个字符匹配”；“[-]”表示“匹配的范围”；“[^]”表示“与这里所指定之外的字匹配成功”； “.”表示任意一个字符；“\s”表示与空白，即空白字符(0×20)、定位符号、换行字符、换页字符匹配成功；“\d”表示“与0-9之间的 数字匹配成功”；“\w”表示“与英文与数字匹配成功”；“\”后面接上“^”、“$”、“[”这些英文、数字以外的转义字符时，这些字符将不再具备转义 字符的小用了，而可以去匹配这些字符本身。 “”表示“出现0次以上”；“+”表示“出现1次以上”；“？”表示“出现0次和1次”；“？”表示“出现0次以上，但取最短的匹配结 果”；“+？”表示“出现1次以上，但取最短的匹配结果”；“()”表示“多个字构成的字符串反复匹配”；“|”表示“可以在样式里列举多个候补条件，只 要其中一个符合就匹配成功”。 quote方法：会返回忽略所有转移字符串后的字符串，再以这个字符串作为new的实参建立出正则表达式对象。 “i”：忽略英文字母大小写的差异；“s”：字符编码方式为Shift_JIS;“e”：字符编码方式为E _JP;”u”:字符编码方式为 UTF-8,”n”：匹配时不考虑文字编码；“x”：忽略正则表达式内部的空白，并忽略“#”后面的内容；“m”：使得“.”能与换行符号匹配成功 常用正则表达式： 1.匹配中文字符的正则表达式： [/u4e00-/u9fa5]2.匹配双字节字符(包括汉字在内)：[^\x00-\xff]3.匹配空白行：\n\s\r4.匹配HTML标记：&lt;(\S\?)[^&gt;]*&gt;.?&lt;/\1&gt;|&lt;.? /&gt;5.匹配首尾空白字符：^\s*|\s$6.匹配Email地址：\w+([-+.]\w+)\@\w+([-.]\w+)*.\w+([-.]\w+)7.匹配网址URL：[a-zA-z]+://[^\s]8.匹配帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线)：^[a-zA-Z][a-zA-Z0-9_]{4,15}$9.匹配国内电话号码：\d{3}-\d{8}|\d{4}-\d{7}10.匹配中国邮政编码：[1-9]\d{5}(?!\d)11.匹配身份证：\d{15}|\d{18}12.匹配ip地址：\d+.\d+.\d+.\d+13.匹配特定数字：^[1-9]\d$ //匹配正整数^-[1-9]\d$ //匹配负整数^-?[1-9]\d$ //匹配整数^[1-9]\d|0$ //匹配非负整数（正整数 + 0）^-[1-9]\d|0$ //匹配非正整数（负整数 + 0）^[1-9]\d\.\d*|0.\d*[1-9]\d$ //匹配正浮点数^-([1-9]\d\.\d*|0.\d*[1-9]\d)$ //匹配负浮点数^-?([1-9]\d\.\d*|0.\d*[1-9]\d|0?.0+|0)$ //匹配浮点数^[1-9]\d\.\d*|0.\d*[1-9]\d|0?.0+|0$ //匹配非负浮点数（正浮点数 + 0）^(-([1-9]\d\.\d*|0.\d*[1-9]\d))|0?.0+|0$ //匹配非正浮点数（负浮点数 + 0）14.匹配特定字符串：^[A-Za-z]+$ //匹配由26个英文字母组成的字符串^[A-Z]+$ //匹配由26个英文字母的大写组成的字符串^[a-z]+$ //匹配由26个英文字母的小写组成的字符串^[A-Za-z0-9]+$ //匹配由数字和26个英文字母组成的字符串^\w+$ //匹配由数字、26个英文字母或者下划线组成的字符串\d{18}|\d{17}[a-zA-Z]{1}|\d{15} //身份证号码验证（包括新旧的验证）^(13[0-9]|15[0|3|6|8|9])\d{8}$ //任意手机号码验证^[w-]+(.[w-]+)@[w-]+(.[w-]+)+$ //email地址^[a-zA-z]+://(w+(-w+)*)(.(w+(-w+)*))*(?S*)?$ //url[1-9][0-9]{4,} //腾讯QQ号只能输入长度为3的字符：^.{3}$以字母开头，长度在6-18之间，只能包含字符、数字和下划线:^[a-zA-Z]w{5,17}$验证是否含有^%&amp;’,;=?$等字符：[^%&amp;’,;=?$x22]+ 来张女神照，美美的！]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>正则表达式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[分享整理自己做这个博客的经验]]></title>
    <url>%2F2017%2F08%2F01%2F%E5%88%86%E4%BA%AB%E6%95%B4%E7%90%86%E8%87%AA%E5%B7%B1%E5%81%9A%E8%BF%99%E4%B8%AA%E5%8D%9A%E5%AE%A2%E7%9A%84%E7%BB%8F%E9%AA%8C%2F</url>
    <content type="text"><![CDATA[你好，欢迎来到我的个人技术博客。 自己做博客的全过程整理（Github+Hexo）自己建博客的初衷：首先觉得它高大上，学计算机不是都应该有自己的blog吗？然后想好好整理自己所学所想，记录自己学习、思考、总结的过程，分享我的故事、经验，这里可以张扬个性，崇尚自由。在这里，严格要求自己，不断进步，加油。 我的步骤：github账户准备关于github，这是一个网站，就是每个程序员自己写的程序，可以在github上建立一个网上的仓库，你每次提交的时候可以把代码提交到网上，这样你的每次提交，别人也都可以看到你的代码，同时别人也可以帮你修改你的代码，这种开源的方式非常方便程序员之间的交流和学习。 我先知道的github，所以就先进行了这方面准备： 账号注册然后登录进去[Github官网]（https://github.com/）注：记你的用户名为username创建一个代码库，名称为 username.github.io 开启github pages功能，主要就是用它搭建的博客。（点击设置，点击Automatic page generator） GitHubPages可以被认为是用户编写的、托管在GitHub上的静态网页。 至此网址username.github.io就可以在浏览器中访问了。撒花！！！ 插曲：Git SSH keys的生成和添加。 ssh keys是ssh中基于密匙的安全验证。通过ssh keys本地git项目与远程的GitHub建立起了联系。 1.设置Git的user name和email： $ git config –global user.name”张玉鹰”（名字是你的真名，不是GitHub的昵称。） $ git config –global user.email “862071204@qq.com” 2.检查SSH keys是否已经有了。桌面打开Git Bash Here： $ cd ~/.ssh 如果提示：No such file or directory 说明你是第一次使用 git。 3.生成密匙： $ ssh-keygen -t rsa -C “862071204@qq.com”回车 回车 回车 回车（密码可以为空，也可设置） 4.这样成功之后在～/.ssh目录下有两个文件，如图记事本打开id_rsa.pub，复制内容到github帐号管理中的添加SSH key界面中。 5.验证： $ ssh -T git@GitHub.com 然后yes 看到如图字样就算成功了。 从此以后就可以拷贝github上的项目源码了。 使用github得到源码：1.获取源码： $ git clone git@github.com:billyanyteen/github-services.git 这样你的机器上就有一个repo了。git是分布式的，没有服务器概念。所有的人的机器上都有一个repo，每次提交都是给自己机器的repo 2.仓库初始化： $ git init 3.生成快照并存入项目索引： $ git add . 4.项目索引提交： $ git commit 4.协作编程：将本地repo于远程的origin的repo合并，推送本地更新到远程： $ git push origin master 5.更新远程更新到本地： $ git pull origin master 下载安装准备软件1.node.js 2.git 如图验证安装，出现版本信息说明安装正确 自定义域名（.com等，需要购买）与Github Pages域名绑定我半信半疑的去腾讯云买了一年（/45元）的zyyup.com的域名。1.进行域名解析，在哪买在哪解析，记录指向的ip地址是 GitHub Pages 的提供的 ip（自己ping username.github.io）2.去到你的username.github.io代码仓库，新建一个文件，名称CNAME 内容zyyup.com（你买的自定义域名）至此你的博客网址zyyup.com就可以在浏览器中访问了。撒花！！！ 至此，个人博客就搭建完毕了。 下面是使用一个快速blog生成工具Hexo，进行博客装饰和博客提交、部署安装配置hexo1.在D盘新建文件夹/blog2.下载安装hexo：打开git bash here ： $ npm install -g hexo-cli 终端输入hexo 回车 如图说明安装成功了。 3.初始化hexo $ hexo init 4.进入安装文件夹 $ npm install （自动安装你需要的组件）之后会出现很多文件如图 5.写博客 $ hexo new “我的第一篇博文” 然后在本地博客文件夹source-&gt;_post文件夹下看到我们新建的markdown文件；用Markdown编辑器打开md文件编辑文字 “你好，欢迎来到我的个人技术博客。”保存 本地发布: $ hexo server 打开 http://localhost：4000 就可以看到自己的文章了。开心撒花！！！ 将blog部署到Github Pages上使用hexo deploy部署1.打开站点配置文件，做如图修改2.安装一个扩展 $ npm install hexo-deployer-git –save 执行部署 $ hexo d 网络发布： $ hexo generate //生成$ hexo deploy //部署 这样，zyyjoin.github.io以及zyyup.com都可以看到那篇文章了。 6.hexo的主题等相关配置 以NexT为例介绍：http://theme-next.iissnan.com/ 1.下载主题使用克隆（clone）最新版本 的方式，之后的更新可以通过 git pull 来快速更新。$ cd your-hexo-site //定位站点目录的 themes 目录下$ git clone https://github.com/iissnan/hexo-theme-next themes/next2.启用主题打开站点配置文件，修改theme值3.验证主题 $ hexo s –debug // 启动服务浏览器访问 http://localhost:4000/检查站点是否正确运行。 附：hexo常用命令 hexo new “postName” #新建文章 hexo new page “pageName” #新建页面 hexo generate #生成静态页面至public目录 hexo server #开启预览访问端口（默认端口4000，’ctrl + c’关闭server） hexo deploy #将.deploy目录部署到GitHub通常使用 hexo d -g 加载部署新博文]]></content>
      <categories>
        <category>杂记</category>
      </categories>
      <tags>
        <tag>博客搭建</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Markdown常用语法]]></title>
    <url>%2F2017%2F07%2F31%2FMarkdown%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95%2F</url>
    <content type="text"><![CDATA[你好，欢迎来到我的个人技术博客。 Markdown常用语法 Markdown是标记语言，语法十分简单。专注你的文字内容而不是排版样式，安心写作。 1.标题（六级）#，##，###,####,#####，###### 大标题 === 小标题 --- 大标题 小标题 2.超链接 百度可嵌入html语句，嵌入锚点实现同样效果： 补充索引链接： 百度 baidu:http://www.baidu.com/ 百度 自动链接 &lt;http://www.baidu.com/&gt; http://www.baidu.com/ 3.图片类似于在超链接前面加上一个英文的感叹号: ! [图片描述,可以为空,类似于 alt](../images/001.jpg) 4.字体（font） *黑体** \斜体 **黑体斜体* 黑体斜体黑体斜体 5.源代码引用多行级别（每一行行首tab键缩进）行内级别（`代码` 键1左边那个） 6.列表有序（1.我是*）无序（-、星、+） 7.引言> 引言内容（引言内可以嵌套使用Markdown语法） 8.分割线 * * *** - - - -——————————- - - -9.\使用反斜线来插入普通符号。 10.分割使文章部分显示 \&lt;!–more–&gt; 11.表格推荐使用七牛云存储图片获取链接：（参考博文）http://www.jianshu.com/p/ec2c8acf63cd]]></content>
      <categories>
        <category>Markdown</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[诗歌：致橡树]]></title>
    <url>%2F2017%2F07%2F31%2Farticle-%E8%87%B4%E6%A9%A1%E6%A0%91%2F</url>
    <content type="text"><![CDATA[致橡树——舒婷 我如果爱你—— 绝不像攀援的凌霄花， 借你的高枝炫耀自己； 我如果爱你—— 绝不学痴情的鸟儿， 为绿荫重复单调的歌曲； 也不止像泉源， 常年送来清凉的慰藉； 也不止像险峰， 增加你的高度，衬托你的威仪。 甚至日光， 甚至春雨。 不，这些都还不够！ 我必须是你近旁的一株木棉， 作为树的形象和你站在一起。 根，紧握在地下； 叶，相触在云里。 每一阵风过， 我们都互相致意， 但没有人， 听懂我们的言语。 你有你的铜枝铁干， 像刀，像剑，也像戟； 我有我红硕的花朵， 像沉重的叹息， 又像英勇的火炬。 我们分担寒潮、风雷、霹雳； 我们共享雾霭、流岚、虹霓。 仿佛永远分离， 却又终身相依。 这才是伟大的爱情， 坚贞就在这里： 爱—— 不仅爱你伟岸的身躯， 也爱你坚持的位置， 足下的土地。 爱情的伟大，拒绝俯就]]></content>
      <categories>
        <category>杂记</category>
      </categories>
      <tags>
        <tag>诗歌</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2017%2F07%2F30%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
